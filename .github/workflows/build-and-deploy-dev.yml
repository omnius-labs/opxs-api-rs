name: build-and-deploy-dev

on:
  workflow_run:
    workflows: ["test"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout submodule
        uses: actions/checkout@v4
        with:
          repository: omnius-labs/core-rs
          path: refs/core-rs
          ssh-key: ${{ secrets.PRIVATE_REPO_SSH_KEY }}
          persist-credentials: true
      - name: Update submodule
        run: git submodule update --init

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Build bin (api)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.build.api
          push: false
          tags: opxs-build-api-image
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-api-builder
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-api-builder,mode=max
          load: true
      - name: Copy bin (api)
        run: |
          docker run --name opxs-api-builder -d opxs-build-api-image
          docker cp opxs-api-builder:/app ./bin
          docker stop opxs-api-builder
          docker rm opxs-api-builder

      - name: Build bin (batch)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.build.batch
          push: false
          tags: opxs-build-batch-image
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-builder
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-builder,mode=max
          load: true
      - name: Copy bin (batch)
        run: |
          docker run --name opxs-batch-builder -d opxs-build-batch-image
          docker cp opxs-batch-builder:/app ./bin
          docker stop opxs-batch-builder
          docker rm opxs-batch-builder

      - name: Login to Amazon ECR
        id: aws-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push image to Amazon ECR (opxs-api)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.api
          push: true
          tags: ${{ steps.aws-ecr.outputs.registry }}/opxs-api:latest
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-api
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-api,mode=max
      - name: Update ECS
        run: |
          aws ecs update-service --cluster opxs-api-cluster --service opxs-api --force-new-deployment

      - name: Build and Push image to Amazon ECR (opxs-batch-send-email)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.batch-send-email
          push: true
          tags: ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-send-email:latest
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-send-email
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-send-email,mode=max
      - name: Update Lambda
        run: |
          aws lambda update-function-code --function-name opxs-batch-send-email --image-uri ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-send-email:latest

      - name: Build and Push image to Amazon ECR (opxs-batch-send-email-feedback)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.batch-send-email-feedback
          push: true
          tags: ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-send-email-feedback:latest
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-send-email-feedback
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-send-email-feedback,mode=max
      - name: Update Lambda
        run: |
          aws lambda update-function-code --function-name opxs-batch-send-email-feedback --image-uri ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-send-email-feedback:latest
